<style lang="less">
    @import "static/less/utility";

    .container {
        position: relative;
        height: 100%;
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: space-between;
        box-sizing: border-box;
    }

    .show {
        display: block;
    }

    .hide {
        display: none !important;
    }
</style>

<script>
    import wepy from 'wepy'
    import {ajax} from './components/ajax';
    import ajax2promise from "./components/ajax2promise";
    import backgroundImage from "./configs/app.image.background";
    import endImage from "./configs/app.image.end";
    import 'wepy-async-function';

    export default class extends wepy.app {
        config = {
            pages: [
                'pages/setex',
                'pages/end',
                'pages/out',
                'pages/ex',
                'pages/aboutme',
                'pages/my',
                'pages/class/create',
                'pages/class/index',
                'pages/class/detail',
                'pages/class/news',
                'pages/class/students',
                'pages/class/welcome',
                'pages/class/fail',
                'pages/class/qr',
            ],
            window: {
                backgroundTextStyle: 'light',
                navigationBarBackgroundColor: '#b0976e',
                navigationBarTitleText: 'WeChat',
                navigationBarTextStyle: 'white'
            },
            tabBar: {
                color: '#cecbb7',
                selectedColor: '#fff',
                borderStyle: '#B0976E',
                backgroundColor: '#B0976E',
                list: [
                    {
                        pagePath: 'pages/setex',
                        selectedIconPath: './images/ex-bar-active.png',
                        iconPath: './images/ex-bar.png',
                        text: '练习',
                        selectText: '练习',
                    },
                    {
                        pagePath: 'pages/class/index',
                        selectedIconPath: './images/class-bar-active.png',
                        iconPath: './images/ex-bar.png',
                        text: '班级',
                        selectText: '班级'
                    },
                    {
                        pagePath: 'pages/my',
                        selectedIconPath: './images/my-bar-active.png',
                        iconPath: './images/my-bar.png',
                        text: '我',
                        selectText: '我',
                    }
                ]
            }
        }

        onShow = () => {
            wx.setKeepScreenOn({
                keepScreenOn: true,
            })

            if (this.globalData.musicUrl && this.globalData.musicTitle && this.globalData.isInex) {
                wx.playBackgroundAudio()
            }
        }

        onHide = () => {
            wx.pauseBackgroundAudio()
        }

        globalData = {
            version: '1.0',
            authInfo: null,
            userInfo: null,
            ajaxPerfix: 'http://m.duding.xin',
            resPerfix: 'http://m.duding.xin/',
//            ajaxPerfix: 'http://120.79.228.118:9001',
//            resPerfix: 'http://120.79.228.118/',
            backgroundImage,
            endImage
        }

        constructor() {
            super()
            this.use('requestfix')
            this.use('promisify');
        }

        async onLaunch(options) {
            const getTokenPromise = () => {
                return new Promise((resolve, reject) => {
                    this.getUserInfo((userinfo) => {
                        this.globalData.userInfo = userinfo;
                        resolve();
                    });
                });
            };

            this.getTokenPromise = getTokenPromise();

            this.globalData.scene = options.scene;
        }

        getTokenPromise = null;

        async getToken (data, userinfo, cb) {
            const that = this;

            await ajax2promise({
                ins: that,
                url: '/weixin/token',
                params: {
                    authCode: data.code,
                    nickName: userinfo.userInfo.nickName,
                    avatarUrl: userinfo.userInfo.avatarUrl,
                },
                method: 'POST',
                success: (d) => {
                    Object.assign(that, d);
                    that.globalData.authInfo = userinfo
                    that.globalData.userInfo = userinfo.userInfo
                    cb && cb(userinfo.userInfo);
                    console.log('授权成功 %o, token ok', userinfo.userInfo);
                    console.log('token: %o', d);
                    wx.setStorage({
                        key: 'token',
                        data: d,
                        success: function (res) {
                            console.log('本地存储 token 成功')
                        }
                    });
                }
            })
            .catch(async () => {
                await ajax2promise({
                    ins: that,
                    url: '/weixin/token/refresh',
                    params: {
                        authCode: data.code,
                        nickName: userinfo.userInfo.nickName,
                        avatarUrl: userinfo.userInfo.avatarUrl,
                    },
                    method: 'POST',
                    success: (d) => {
                        Object.assign(that, d)
                        that.globalData.authInfo = userinfo
                        that.globalData.userInfo = userinfo.userInfo
                        cb && cb(userinfo.userInfo);
                        console.log('授权成功 %o, token ok', userinfo.userInfo)
                    },
                    fail: () => {
                        console.log('多次授权失败')
                    }
                });
            });
        }

        async getUserInfo(cb) {
            const that = this;
            const d = wx.getStorageSync('token');

            if (this.globalData.userInfo && d && d.accessToken) {
                cb && cb(this.globalData.userInfo);
                return this.globalData.userInfo;
            }

            const wxLoginPromise = function () {
                return new Promise((resolve, reject) => {
                    wx.login({
                        success (data) {
                            console.log('登录成功, %o', data);
                            wx.getUserInfo({
                                success (userinfo) {
                                    if (d && d.accessToken) {
                                        Object.assign(that, d)
                                        that.globalData.authInfo = userinfo
                                        that.globalData.userInfo = userinfo.userInfo
                                        cb && cb(userinfo.userInfo);
                                        console.log('正在使用token： ' + d.accessToken);
                                        resolve({
                                            state: "cache"
                                        });
                                    } else {
                                        resolve(that.getToken(data, userinfo, cb));
                                    }
                                },
                                fail: function (error) {
                                    resolve(that.getToken(data, {
                                        userInfo: {}
                                    }, cb));
                                }
                            });
                        }
                    });
                });
            };

            await wxLoginPromise();

            wx.getNetworkType({
                success: (res) => {
                    const d = wx.getStorageSync('exTimeOffline');
                    if (!d || (d && d.timeSet)) return;

                    const networkType = res.networkType;
                    if (networkType !== 'none' && networkType !== 'unkonwn') {
                        ajax2promise({
                            ins: this,
                            url: '/train/submit',
                            params: d,
                            method: 'POST',
                            success: () => {
                                console.log('补充提交练习时间成功')
                                wx.setStorage({
                                    key: 'exTimeOffline',
                                    data: {},
                                    success: function () {
                                        console.log('清除 补充提交练习');
                                    }
                                })
                            },
                            fail: () => {
                                console.log('提交练习时间失败');
                            }
                        });
                    }
                }
            });
        }
    }
</script>
