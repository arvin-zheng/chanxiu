<template>
    <login :userInfo.sync="userInfo" @login.user="login"></login>

    <view class="full-height flex-v" wx:if="{{ready}}" @tap="hideStudentsActions">
        <nav :id.sync="classId" nav="students"></nav>

        <view class="tab">
            <view data-tab="{{item.id}}" class="tab-item {{currentTab === item.id ? 'on' : ''}}" @tap="switchTab" wx:key="index" wx:for="{{tab}}">
                <text>{{item.text}}</text>
            </view>
        </view>

        <view class="tab-body flex-v flex-1 {{currentTab}}">
            <!--所有同学-->
            <view class="students" wx:if="{{currentTab==='all'}}">
                <view class="student" wx:for="{{students}}" wx:key="{{index}}">
                    <image class="avatar" src="{{item.avatarUrl}}"></image>
                    <view class="row">
                        <text class="nick-name">{{item.nickName}}</text>
                        <text class="role">{{item.roleText}}</text>
                    </view>
                    <view class="row">
                        <text class="train" wx:if="{{item.everyTrainDuration}}">{{item.everyTrainDuration}}</text>
                        <text class="join-time">{{item.strCreateTime}}加入</text>
                    </view>

                    <image src="/images/classes/trigger.png" class="trigger" data-id="{{item.id}}" @tap.stop="showStudentsActions" wx:if="{{!item.isMe && currentStudentId !== item.id && ((isMonitor && item.role === 0) || (isMonitor && item.role !== 0) || (isMonitor || (isViceMonitor && item.role === 0)))}}"></image>

                    <view class="actions" @tap.stop="ghost" wx:if="{{currentStudentId === item.id}}">
                        <form class="confirm-box" data-id="{{item.id}}" wx:if="{{confirm.studentId === item.id}}" report-submit="true" @submit="confirmStudentOperate">
                            <button class="confirm" form-type="submit">{{confirm.text}}</button>
                        </form>
                        <block wx:else>
                            <button plain="true" data-id="{{item.id}}" open-type="getUserInfo" @getuserinfo="promoteStudent" wx:if="{{isMonitor && item.role === 0}}">设为班干部</button>
                            <button plain="true" data-id="{{item.id}}" open-type="getUserInfo" @getuserinfo="cancelStudent" wx:if="{{isMonitor && item.role !== 0}}">取消班干部</button>
                            <button plain="true" data-id="{{item.id}}" open-type="getUserInfo" @getuserinfo="replaceStudent" wx:if="{{isMonitor || (isViceMonitor && item.role === 0)}}">接任我</button>
                            <button plain="true" data-id="{{item.id}}" open-type="getUserInfo" @getuserinfo="deleteStudent" class="del" wx:if="{{isMonitor || (isViceMonitor && item.role === 0)}}">删除</button>
                        </block>
                    </view>
                </view>
            </view>
            <!--新同学-->
            <view class="students" wx:if="{{currentTab==='new'}}">
                <block wx:if="{{newStudents.length > 0}}">
                    <view class="student" wx:for="{{newStudents}}" wx:key="{{index}}">
                        <image class="avatar" src="{{item.avatarUrl}}"></image>
                        <view class="row">
                            <text class="nick-name">{{item.nickName}}</text>
                            <view class="new-student-actions">
                                <text wx:if="{{item.statusText}}">{{item.statusText}}</text>
                                <block wx:elif="{{isMonitor || isViceMonitor}}">
                                    <form report-submit="true" data-id="{{item.id}}" @submit="refuseStudent">
                                        <button class="btn-secondary" open-type="getUserInfo" form-type="submit">拒绝</button>
                                    </form>
                                    <form report-submit="true" data-id="{{item.id}}" @submit="agreeStudent">
                                        <button class="btn-primary" open-type="getUserInfo" form-type="submit">通过</button>
                                    </form>
                                </block>
                            </view>
                        </view>
                        <view class="row">
                            <view class="row">
                                <text class="train" wx:if="{{item.everyTrainDuration}}">{{item.everyTrainDuration}}</text>
                                <text class="join-time">{{item.strCreateTime}}</text>
                            </view>

                            <view class="row intro">{{item.introduction}}</view>
                        </view>
                    </view>
                </block>
                <view class="no-records" wx:else>暂无新同学</view>
            </view>
        </view>

        <!--操作按钮-->
        <block wx:if="{{isPending}}">
            <view class="btn-box fixed to-bottom">
                <button class="btn-disabled">等待审核</button>
            </view>
        </block>
        <view class="btn-box fixed to-bottom" wx:elif="{{isMyClass}}">
            <button class="btn-primary" open-type="share">邀请新同学</button>
        </view>
        <block wx:else>
            <view class="btn-box fixed to-bottom join-class">
                <button class="btn-primary" open-type="getUserInfo" @getuserinfo="joinClass" wx:if="{{detail.remainingQuota > 0}}">加入班级</button>
                <button class="btn-disabled" wx:else>已满员</button>
            </view>
        </block>

        <!--返回列表页-->
        <view class="fixed to-bottom switch-page-btn-box" wx:if="{{bootFromMsg}}">
            <button @tap="gotoClassListPage">首页</button>
        </view>
    </view>
</template>

<style lang="less">
    @import (reference) "../../static/less/utility";

    page {
        .full-height;
        background-color: #eee;
    }

    .tab {
        margin-top: 18rpx;
    }

    .tab-body {
        background-color: #fff;
    }

    .students {
        padding: 30rpx 40rpx;

        .student {
            position: relative;
            padding: 30rpx 0;
            overflow: hidden;

            .row {
                overflow: hidden;
            }

            .avatar {
                float: left;
                width: 90rpx;
                height: 90rpx;
                margin-right: 20rpx;
                border: 2rpx solid #b0976e;
            }

            .nick-name {
                display: inline-block;
                vertical-align: top;
                line-height: 56rpx;
                font-size: 28rpx;
                color: #333;
            }

            .role {
                display: inline-block;
                vertical-align: top;
                padding: 0 12rpx;
                margin-left: 5rpx;
                font-size: 20rpx;
                line-height: 30rpx;
                background-color: #b0976e;
                color: #fff;
                border-radius: 20rpx;
            }

            .new-student-actions {
                float: right;

                text {
                    color: #333;
                    line-height: 56rpx;
                    font-size: 28rpx;
                }

                button {
                    width: auto;
                    height: 52rpx;
                    line-height: 52rpx;
                }

                form:not(:first-child){
                    margin-left: 30rpx;
                }
            }

            .train,
            .join-time,
            .intro {
                display: block;
                float: left;
                margin-top: 5rpx;
                font-size: 24rpx;
                line-height: 30rpx;
                color: #aaa;
            }

            .join-time {
                float: right;
            }

            .intro {
                float: none;
                margin-top: 15rpx;
                word-break: break-all;
            }

            .trigger {
                position: absolute;
                padding: 20rpx;
                top: 10rpx;
                right: -10rpx;
                width: 35rpx;
                height: 28rpx;
                z-index: 2;
            }

            .actions {
                @height: 90rpx;
                position: absolute;
                top: 30rpx;
                right: 0;
                height: @height;
                z-index: 3;

                button,
                .confirm {
                    float: left;
                    height: @height;
                    padding: 0 30rpx;
                    border: 2rpx solid #b0976e;
                    background-color: #fff;
                    border-radius: 0;
                    line-height: @height;
                    font-size: 28rpx;
                    color: #b0976e;
                }

                .confirm {
                    background-color: #e70606;
                    border-color: #e70606;
                    color: #fff;
                }

                .del {
                    background-color: #b0976e;
                    color: #fff;
                }

                button + button {
                    border-left: none;
                }
            }
        }

        .no-records {
            padding-top: 50rpx;
            text-align: center;
            font-size: 24rpx;
            color: #ccc;
        }
    }
</style>

<script>
    import wepy from "wepy";
    import classInfo from "../../mixins/classInfo";
    import {getStudents, getNewStudents, studentOperate} from "../../modules/Classes";
    import {collectFormId} from "../../modules/Common";
    import ready from "../../mixins/ready";
    import boot from "../../mixins/boot";

    import nav from "./detail/navigator";
    import login from "../../components/login";

    export default class extends wepy.page {
        config = {
            disableScroll: true,
            navigationBarTitleText: "班级"
        };

        components = {
            nav,
            login
        };

        data = {
            currentTab: "all",
            tab: [
                {
                    id: "all",
                    text: "所有"
                },
                {
                    id: "new",
                    text: "新同学"
                }
            ],
            students: [],
            newStudents: [],
            currentStudentId: "",
            confirm: {
                text: "",
                studentId: "",
                type: ""
            },
            userInfo: {}
        };

        mixins = [ready, classInfo, boot];

        watch = {
            async currentTab (value, oldValue) {
                if (value === "new") {
                    this.clearConfirmInfo();
                    this.clearCurrentStudentId();

                    if (oldValue !== "new") {
                        this.getNewStudents();
                    }
                }
                else {
                    if (oldValue !== "all") {
                        this.getStudents();
                    }
                }
            }
        };

        methods = {
            login (e) {
                wx.setStorageSync("token", {});

                this.$parent.getUserInfo((userInfo = {}) => {
                    this.userInfo = Object.assign({}, userInfo);
                    this.$apply();
                }, e.detail);
            },
            switchTab (e) {
                this.currentTab = e.currentTarget.dataset.tab;
            },
            showStudentsActions (e) {
                this.clearConfirmInfo();
                this.currentStudentId = e.currentTarget.dataset.id;
            },
            hideStudentsActions () {
                this.clearConfirmInfo();
                this.clearCurrentStudentId();
            },
            async promoteStudent (e) {
                this.confirm.studentId = e.currentTarget.dataset.id;
                this.confirm.text = "确定设置TA为副班长";
                this.confirm.type = 3;
                this.$apply();
            },
            async cancelStudent (e) {
                this.confirm.studentId = e.currentTarget.dataset.id;
                this.confirm.text = "确定取消班干部";
                this.confirm.type = 2;
                this.$apply();
            },
            async replaceStudent (e) {
                this.confirm.studentId = e.currentTarget.dataset.id;
                this.confirm.text = "确定TA接任我的职务";
                this.confirm.type = 1;
                this.$apply();
            },
            async deleteStudent (e) {
                this.confirm.studentId = e.currentTarget.dataset.id;
                this.confirm.text = "确定删除";
                this.confirm.type = 0;
                this.$apply();
            },
            async confirmStudentOperate (e) {
                const clear = () => {
                    this.clearCurrentStudentId();
                    this.clearConfirmInfo();
                    this.$apply();
                };

                let confirmType = this.confirm.type;
                let msgType;

                // 删除
                if (confirmType === 0) {
                    msgType = 9;
                }
                // 接任
                else if (confirmType === 1) {
                    msgType = 7;
                }
                // 取消班干部
                else if (confirmType === 2) {
                    msgType = 8;
                }
                // 设为班干部
                else if (confirmType === 3) {
                    msgType = 7;
                }

                await (collectFormId.bind(this)({
                    formId: e.detail.formId,
                    page: "/pages/class/students?_f=1&id=" + this.classId,
                    type: msgType
                })).catch(() =>{});

                await studentOperate.bind(this)({
                    studentId: this.confirm.studentId,
                    type: confirmType
                });

                wx.showToast({
                    title: "操作成功"
                });

                clear();
                this.getClassDetail();
                this.getStudents();
            },
            async refuseStudent (e) {
                let id = e.currentTarget.dataset.id;
                let type = 4;
                let msgType = 3;

                await (collectFormId.bind(this)({
                    formId: e.detail.formId,
                    page: "/pages/class/fail?id=" + this.classId,
                    type: msgType
                })).catch(() =>{});

                await studentOperate.bind(this)({
                    studentId: id,
                    type
                });
                this.getNewStudents();
            },
            async agreeStudent (e) {
                let id = e.currentTarget.dataset.id;
                let type = 5;
                let msgType = 2;

                await (collectFormId.bind(this)({
                    formId: e.detail.formId,
                    page: "/pages/class/welcome?id=" + this.classId,
                    type: msgType
                })).catch(() =>{});

                await studentOperate.bind(this)({
                    studentId: id,
                    type
                });
                this.getNewStudents();
            },
            ghost () {

            }
        };

        clearConfirmInfo () {
            this.confirm.studentId = "";
        }

        clearCurrentStudentId () {
            this.currentStudentId = "";
        }

        async getStudents () {
            this.students = await getStudents.bind(this)();
            this.$apply();
        }

        async getNewStudents () {
            this.newStudents = await getNewStudents.bind(this)();
            this.$apply();
        }

        onShareAppMessage () {
            return {
                title: `${this.userInfo.nickName}邀请你加入“${this.detail.name}”`,
                path: "/pages/class/detail?_f=1&id=" + this.classId
            }
        }

        onShow() {
            this.$parent.getUserInfo(async (userInfo) => {
                this.userInfo = Object.assign({}, userInfo);
                this.addReadyCallback(this.getClassDetail());
                this.addReadyCallback(this.getStudents());
                await this.runReadyCallbacks();
                wx.setNavigationBarTitle({
                    title: this.detail.name
                });
            });
        }
    }
</script>
