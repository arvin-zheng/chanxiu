<style lang='scss'>
  @import '../zanui/common';

  page {
    background: #eee;
  }

  .header-wrap {
    position:relative;
    height:69px;
    width:100%;
    color:#333;
    font-size:14px;
    background:#fff;
    border-bottom:1px solid #ddd;
  }
  .pr {
    position:relative;
  }
  .userinfo-avatar {
    position: absolute;
    top: 12px;
    left: 20px;
    width:44px;
    height:44px;
  }
  .nickname {
    position:absolute;
    top:7px;
    left:86px;
  }
  .desc {
    position: absolute;
    top: 40px;
    left: 85px;
    color: $gray-dark;
  }

  .header-pannel {
    position: relative;
    width: 100%;
    align-self: start;
    font-size: 13px;
    height: 35px;
    line-height: 35px;
    color: #ccc;
    box-sizing: border-box;
  }
  .add-flag {
    position: absolute;
    right: 20px;
    top: 9px;
    font-size: 14px;
    color: #fff;
    background-color: $text-color;
    border-radius: 20px;
    width: 16px;
    height: 16px;
    line-height: 14px;
    text-align: center;
  }
  .ex-data-pannel {
    display: flex;
    background-color: #fff;
    width: 100%;
    padding-left: 20px;
    padding-top: 10px;
    padding-bottom: 10px;
    margin-bottom: 10px;
    justify-content: center;
    align-items: center;
    line-height: 1.5;
  }
  .ex-data {
    flex: 1;
    display: flex;
    flex-direction: column;
  }
  .cur-times {
    color: $light-orange;
    font-size: 14px;
  }
  .ex-desc {
    color: $gray-dark;
    font-size: 12px;
  }
  .gray-button {
    border: 1px solid $light-orange;
    color: $light-orange;
    border-radius: 50rem;
    padding: 0 15px;
    font-size: 14px;
    height:25px;
    line-height:25px;
    box-sizing: border-box;
  }
  .mr-20 {
    margin-right: 20px;
  }
  .mr-40 {
    margin-right: 40px;
  }
  .pl-20 {
    padding-left: 20px;
  }
  .pl-40 {
    padding-left: 40px;
  }

  .wrap {
    width: 100%;
    background-color: #fff;
    padding: 15px 0 5px 0;
  }
  .pr {
    position:relative;
  }
  .header-banner-wrap {
    display: flex;
    justify-content: center;
    flex-wrap: wrap;
    width: 100%;
    margin-top:5px;
    font-size: 0.8rem
  }
  .header-cols {
    position: relative;
    width: 33%;
    margin-bottom: 5px;
    box-sizing: border-box;
    box-sizing: border-box;
    padding: 4px 0;
    box-sizing: border-box;
  }
  .hry {
    position: absolute;
    right: -20px;
    top: 35px;
    display: block;
    width: 40px;
    height: 1px;
    background: #444;
    transform: rotate(90deg);
    opacity: .2;
  }
  .header-banner {
    display: flex;
    flex-direction: column;
    align-items: center;
    margin-bottom: 5px;
    color: #707070;
    text-align: center;
    font-size: 16px;
  }
  .num {
    font-size: 30px;
    margin-right: 10rpx;
    font-weight: bold;
    line-height: 1;
  }
  .unit {
    font-size: 16px;
    color: $light-orange;
  }
  .flex-r-center {
    display: flex;
    align-items: flex-end;
    justify-content: center;
  }
  .ex {
    color: #B0976E;
    font-size: 0.8rem;
  }
  .condition-pannel {
    display: flex;
    align-items: start;
    margin-bottom: 20px;
  }
  .default-btn {
    background-color: #fff;
    color: $border-color;
    font-size: 12px;
    padding: 2px 5px;
    margin-right: 10px;
    border-radius: 3px;
    border: 1px solid $border-color;
  }
  .condition-btn {
    background-color: $light-orange;
    color: #fff;
    font-size: 12px;
    padding: 2px 5px;
    margin-right: 10px;
    border-radius: 3px;
  }

  .ex-list-pannel {
    display: flex;
    flex-direction: column;
    align-items: start;
    justify-content: start;
    background-color: #fff;
    width: 100%;
    padding-top: 10px;
    padding-bottom: 10px;
  }
  .ex-content {
    display: flex;
    flex-direction: column;
    width: 100%;
    padding: 0 20px;
    margin-bottom: 15px;
    box-sizing: border-box;
    font-size: 12px;
    color: $gray-dark;
  }
  .flex-r {
    display: flex;
    width: 100%;
  }
  .diary-wait-edit {
    width: 15px;
    height: 15px;
    margin-right: 5px;
  }
  .ex-title {
    flex: 1;
    color: $gray-darker;
    line-height: 15px;
  }
  .ex-date {
    color: $gray-dark;
  }
  .line-2 {
    line-height: 2;
  }
  .line-3-content {
    height:68px;
    overflow:hidden;
  }
  .ex-process-pannel {
    display: flex;
    width: 100%;
    margin-top: 10px;
  }
  .read-all {
    flex: 1;
    font-size: 12px;
    color: $light-orange;
  }
  .process-btns {

  }
  .process-btn {
    width: 16px;
    height: 16px;
    margin-left: 30px;
  }

  .popup-headerr {
    display: flex;
    align-items: center;
    width: 100%;
    height: 40px;
    padding: 0 15px;
    box-sizing: border-box;
    font-size: 14px;
    color: $gray-darker;
  }
  .flex-1 {
    flex: 1;
  }
  .close-icon {
    width: 15px;
    height: 15px;
  }
  .popup-footer {
    display: flex;
    align-items: center;
    justify-content: center;
    height: 50px;
  }
  .mr-20 {
    margin-right: 20px;
  }
  .cancel-btn {
    color: #fff;
    padding: 3px 12px;
    border-radius: 20px;
    font-size: 13px;
    background-color: $gray-dark;
  }
  .confirm-btn {
    background-color: $light-orange;
  }
  .zan-popup .edit-content {
    display: none;
  }
  .zan-popup--show .edit-content {
    display: block;
  }
  .edit-content {
    height: 180px;
    background-color: #fff;
    border: 1px solid $border-color;
    margin: 0 15px;
    padding: 10px;
    box-sizing: border-box;
    width: auto;
    line-height: 1.5;
    font-size: 12px;
  }
  .delete-ex-desc {
    margin: 10px 15px;
    color: $text-color;
    font-size: 16px;
  }

  .fixed-pannel {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, .7);
    z-index: 2;
  }
  .features-list {
    position: absolute;
    bottom: 0;
    left: 0;
    width: 100%;
    background-color: #fff;
  }
  .features-item {
    line-height: 50px;
    height: 50px;
    width: 100%;
    text-align: center;
  }
  .b-border {
    border-bottom: 1px solid $border-color;
  }
</style>

<template>
  <view class="container">
    <!-- user -->
    <view class="header-wrap">
      <view class="pr">
        <image class="userinfo-avatar" src="{{ userInfo.avatarUrl || '/images/aboutme-logo.png'}}" background-size="contain"/>
        <view class="nickname">{{userInfo.nickName || '未授权'}}</view>
        <view class="desc">{{userInfo.city || ''}}{{'    '}}{{userInfo.province || ''}}</view>
      </view>
    </view>

    <view class="header-pannel pl-20">
      练习数据
    </view>
    <view class="pl-40 ex-data-pannel">
      <view class="ex-data">
        <view class="cur-times">今天练习{{todayInfo.todayTrainCount}}次{{todayInfo.todayDuration}}分钟</view>
        <view class="ex-desc">连续练习{{todayInfo.continuousNum}}天，最大练习{{todayInfo.maxContinuousNum}}天</view>
      </view>
      <view class="gray-button mr-40" >去打卡</view>
    </view>

    <!-- 数据 -->
    <view class="wrap ex">
      <view class="condition-pannel pl-20">
        <view class="default-btn {{timeType == 1 ? 'condition-btn' : ''}}" @tap="timeTypeChange(1)">本周</view>
        <view class="default-btn {{timeType == 2 ? 'condition-btn' : ''}}" @tap="timeTypeChange(2)">本月</view>
        <view class="default-btn {{timeType == 3 ? 'condition-btn' : ''}}"  @tap="timeTypeChange(3)">全部</view>
      </view>
      <view class="header-banner-wrap">
        <view class="header-cols">
          <view class="header-banner">总天数</view>
          <view class="flex-r-center">
            <view class="inline num">{{totalTrainDay}}</view><view class="inline unit">天</view>
          </view>
          <hr class="hry"/>
        </view>
        <view class="header-cols">
          <view class="header-banner">日均时长</view>
          <view class="flex-r-center">
            <view class="inline num">{{averageDayTime}}</view><view class="inline unit">分钟</view>
          </view>
          <hr class="hry"/>
        </view>
        <view class="header-cols">
          <view class="header-banner">总次数</view>
          <view class="flex-r-center">
            <view class="inline num">{{totalCount}}</view><view class="inline unit">次</view>
          </view>
        </view>
        <view class="header-cols">
          <view class="header-banner">平均每次</view>
          <view class="flex-r-center">
            <view class="inline num">{{averageEveryTime}}</view><view class="inline unit">分钟</view>
          </view>
          <hr class="hry"/>
        </view>
        <view class="header-cols">
          <view class="header-banner">单次最多</view>
          <view class="flex-r-center">
            <view class="inline num">{{singleMostDuration}}</view><view class="inline unit">分钟</view>
          </view>
        </view>
      </view>
    </view>
    <!-- 数据 end -->

    <view class="header-pannel pl-20">
      练习记录
      <view class="add-flag">+</view>
    </view>
    <view class="ex-list-pannel">
      <view class="condition-pannel pl-20">
        <view class="default-btn {{dynamicTimeType == 1 ? 'condition-btn' : ''}}" @tap="dynamicTimeTypeChange(1)">所有</view>
        <view class="default-btn {{dynamicTimeType == 2 ? 'condition-btn' : ''}}" @tap="dynamicTimeTypeChange(2)">状态记录</view>
        <view class="default-btn {{dynamicTimeType == 3 ? 'condition-btn' : ''}}" @tap="dynamicTimeTypeChange(3)">练习日记</view>
      </view>
      <repeat for="{{dynamicList}}" key="index" index="index" item="item">
        <view class="ex-content">
          <view class="flex-r">
            <image src="../images/record.png" class="diary-wait-edit  {{!item.content ? '' : 'hide'}}" />
            <image src="../images/log.png" class="diary-wait-edit  {{item.content ? '' : 'hide'}}" />
            <view class="ex-title">{{item.title}}</view>
            <view class="ex-date">{{item.strCreateTimeStr}}</view>
          </view>
          <view class="flex-r line-2 {{!item.readAll && item.content.length > 63 ? 'line-3-content' : ''}} {{!!item.content ? '' : 'hide'}}">
            {{item.content}}
          </view>
          <view class="ex-process-pannel">
            <view class="read-all" @tap="readAllContent({{item}}, {{index}})">
              {{item.content.length > 63 && !item.readAll ? '查看全文' : ''}}
            </view>
            <view class="process-btns">
              <image class="process-btn" @tap="edit({{item}})" src="/images/edit.png"/>
              <image class="process-btn" @tap="deleteEx({{item}})" src="/images/delete.png"/>
              <image class="process-btn" @tap="processShow({{item}})" src="/images/send.png"/>
            </view>
          </view>
        </view>
      </repeat>
    </view>

    <editEx style="width: 100%" class="pr">
      <view class="popup-headerr">
        <view class="flex-1">
          记录练习状态
        </view>
        <image class="close-icon" src="/images/close-icon.png" @tap="editExCancel"/>
      </view>
      <textarea class="edit-content" bindblur="contentBlur" value="{{dynamic.content}}" placeholder="请输入练习状态" />
      <view class="popup-footer">
        <view class="cancel-btn mr-20" @tap="editExCancel">取消</view>
        <view class="cancel-btn confirm-btn" @tap="editInfoSave">保存</view>
      </view>
    </editEx>
    <deleteEx>
      <view class="popup-headerr">
        <view class="flex-1">
          删除练习状态确认
        </view>
        <image class="close-icon" src="/images/close-icon.png" @tap="deleteExCancel"/>
      </view>
      <view class="delete-ex-desc">确定删除这条练习状态吗？</view>
      <view class="popup-footer">
        <view class="cancel-btn mr-20" @tap="deleteExCancel">取消</view>
        <view class="cancel-btn confirm-btn" @tap="deleteComfirm">删除</view>
      </view>
    </deleteEx>

    <view class="fixed-pannel" wx:if="{{showFeaturesList}}" @tap.stop="processHide">
      <view class="features-list">
        <view class="features-item b-border" @tap.stop="toExDiary">日记</view>
        <view class="features-item" @tap.stop="toExDiaryAdd">补录</view>
      </view>
    </view>
  </view>
</template>

<script>
  import wepy from 'wepy'
  import {ajax} from '../components/ajax.js'
  import zanPop from '../components/zan-popup'
  import moment from 'moment'

  /**
   * 获取历史练习数据
   */
  const briefHistoryInfo = function () {
    ajax({
      ins: this,
      url: '/brief/history/info',
      params: {
        // timeType/分类/整型 1=查询本周，2=查询本月，3=查询全
        timeType: this.timeType
      },
      success: (d) => {
        const trainInfo = d.trainInfo || {}

        this.totalTrainDay = trainInfo.totalTrainDay || 0
        this.averageDayTime = trainInfo.averageDayTime || 0
        this.totalCount = trainInfo.totalCount || 0
        this.averageEveryTime = trainInfo.averageEveryTime || 0
        this.singleMostDuration = trainInfo.singleMostDuration || 0
        Object.assign(this, d.trainInfo)
        console.log(d)
        this.$apply()
      }
    })
  }

  /**
   * 获取今日练习数据
   */
  const getTodayInfo = function () {
    ajax({
      ins: this,
      url: '/brief/today/info',
      success: (d) => {
        const trainInfo = d.trainInfo || {}
        if (trainInfo) {
          this.todayInfo.todayTrainCount = trainInfo.todayTrainCount || '0'
          this.todayInfo.todayDuration = trainInfo.todayDuration || '0'
          this.todayInfo.continuousNum = trainInfo.continuousNum || '0'
          this.todayInfo.maxContinuousNum = trainInfo.maxContinuousNum || '0'
        }
        console.log(this.todayInfo)
        this.$apply()
      }
    })
  }

  /**
   * 获取动态练习记录
   */
  const dynamicFind = function () {
    const page = 1
    const pageSize = 10

    ajax({
      ins: this,
      url: '/dynamic/find',
      method: 'POST',
      params: {
        // findType/查询类型/整型, 1=查询所有，2=查询状态记录，3=查询练习日记
        timeType: this.dynamicTimeType,
        offset: (page - 1) * 10,
        count: pageSize
      },
      success: (data) => {
        if (data) {
          for (let d of data) {
            console.log(d.strCreateTime)
            if (d.strCreateTime) {
              let minuteDesc =moment(d.strCreateTime, 'YYYY-MM-DD HH:mm:ss').startOf('minute').fromNow()
              let hourDesc =moment(d.strCreateTime, 'YYYY-MM-DD HH:mm:ss').startOf('hours').fromNow()

              if (minuteDesc.indexOf(' minute ago') >= 0) {
                d.strCreateTimeStr = hourDesc.replace(' minute ago', '分钟前')
              } else if (hourDesc.indexOf(' hours ago') >= 0) {
                d.strCreateTimeStr = hourDesc.replace(' hours ago', '小时前')
              } else {
                d.strCreateTimeStr = moment(d.strCreateTime).format('YYYY-MM-DD HH:mm')
              }
            }

            d.readAll = false
          }
          this.dynamicList = data
        } else {
          this.dynamicList = []
        }
        console.log(this.dynamicList)
        this.$apply()
      }
    })
  }

  const dynamicSave = function (id, title, content) {
    let url = '/dynamic/add'
    let params = {
      title, content
    }

    if (id) {
      params.id = id
      url = '/diary/update'
    }

    ajax({
      ins: this,
      url,
      params,
      method: 'POST',
      success: (d) => {
        console.log(d)
        this.$invoke('editEx', 'togglePopup')
        dynamicFind.call(this)
        this.$apply()
      }
    })
  }


  /**
   * 删除日记
   */
  const dynamicDel = function (id) {
    ajax({
      ins: this,
      url: '/diary/del',
      method: 'POST',
      params: {
        id
      },
      success: (d) => {
        console.log(d)
        dynamicFind.call(this)
      }
    })
  }

  export default class Tag extends wepy.page {
    config = {
      disableScroll: false,
      navigationBarTitleText: '练习简报'
    }
    components = {
      deleteEx: zanPop,
      editEx: zanPop
    }
    data = {
      dynamic: {},
      dynamicList: [],
      totalTrainDay: 0,
      averageDayTime: 0,
      totalCount: 0,
      averageEveryTime: 0,
      singleMostDuration: 0,
      continuousNum: 0,
      showFeaturesList: false,
      userInfo: {},
      timeType: 1,
      dynamicTimeType: 1,
      todayInfo: {
        // 今日练习次数
        todayTrainCount: 0, //整型
        // 今日练习总时长（分钟）
        todayDuration: 0,
        // 最新连续练习记录中的连续天数
        continuousNum: 0,
        // 最大连续练习天数
        maxContinuousNum: 0
      }
    }
    onGotUserInfo(e) {
    }
    methods = {
      timeTypeChange(timeType) {
        console.log(timeType)
        this.timeType = timeType

        // 获取历史练习数据
        briefHistoryInfo.call(this)
      },
      dynamicTimeTypeChange(dynamicTimeType) {
        console.log(dynamicTimeType)
        this.dynamicTimeType = dynamicTimeType

        // 获取历史练习数据
        dynamicFind.call(this)
      },
      onShareAppMessage (res) {
        return {
          title: '持壹',
          path: 'pages/setex',
          // imageUrl: this.$parent.globalData.resPerfix + this.shareUrl + '?' + Date.now(),
          complete: (e) => {
            console.log(e)
          }
        }
      },
      contentBlur(e) {
        console.log(e.detail.value)
        this.dynamic.content = e.detail.value
      },
      edit(item) {
        console.log(item)
        this.dynamic = item
        this.$invoke('editEx', 'togglePopup')
      },
      editExCancel() {
        this.$invoke('editEx', 'togglePopup')
      },
      editInfoSave() {
        const that = this

        setTimeout(_ => {
          const {id, title, content} = that.dynamic
          dynamicSave.apply(that, [id, title, content])
        }, 200)
      },
      deleteEx(item) {
        this.dynamic = item
        this.$invoke('deleteEx', 'togglePopup')
      },
      deleteExCancel() {
        this.$invoke('deleteEx', 'togglePopup')
      },
      deleteComfirm() {
        dynamicDel.apply(this, [this.dynamic.id])
        this.$invoke('deleteEx', 'togglePopup')
      },
      processShow(item) {
        this.dynamic = item
        this.showFeaturesList = true
      },
      processHide() {
        this.showFeaturesList = false
      },
      toExDiary() {
        this.$parent.globalData.diaryTitle = this.dynamic.title
        this.$parent.globalData.diaryContent = this.dynamic.content
        this.$parent.globalData.diaryStrCreateTime = this.dynamic.strCreateTime

        this.$navigate('./ex-diary')
        this.showFeaturesList = false
      },
      toExDiaryAdd() {
        this.$navigate('./ex-diary-add')
        this.showFeaturesList = false
      },
      readAllContent(item, index) {
        this.dynamicList[index].readAll = true
      }
    }
    onLoad() {
      this.$parent.getUserInfo((userInfo) => {
        if (userInfo) {
          this.userInfo = userInfo
        }

        this.$apply()
      })

      // 获取历史练习数据
      briefHistoryInfo.call(this)
      // 获取今日练习数据
      getTodayInfo.call(this)
      // 获取动态练习记录
      dynamicFind.call(this)
    }
  }
</script>
