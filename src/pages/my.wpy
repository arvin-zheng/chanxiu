<style lang='css'>
  page {
    background: #eee;
  }
  .inline {
    display: inline;
  }
  .my-header {
    position: fixed;
    top: 0;
    background-color: #B0976E;
    width: 100%;
    color: #fff;
    text-align: center;
    padding: 10px;
  }
  .t-85 {
    top: 85px;
  }
  .header-wrap {
    position:relative;
    height:69px;
    width:100%;
    color:#333;
    font-size:14px;
    background:#fff;
    border-bottom:1px solid #ddd;
  }
  .userinfo-avatar {
    position: absolute;
    top: 12px;
    left: 26px;
    width:44px;
    height:44px;
  }
  .pr {
    position:relative;
  }
  .nickname {
    position:absolute;
    top: 17px;
    left: 86px;
    color:#333;
    font-size:14px;
    background:#fff;
    display: inline-block;
    outline: 0;
  }
  .stars {
    position:absolute;
    top:23px;
    left:84px;
    color:#ccc;
  }
  .star {
    width: 10px;
    height: 10px;
    margin-left: 2px;
  }
  .desc {
    position:absolute;
    top:40px;
    left:85px;
    color:#ccc;
  }

  .wrap {
    width: 100%;
    background-color: #fff;
    padding: 15px;
  }
  .pr {
    position:relative;
  }
  .header-banner-wrap {
    display: flex;
    justify-content: space-between;
    flex-wrap: wrap;
    width:100%;
    padding: 0 8% 0 10%;
    box-sizing: border-box;
    text-align: center;
    margin-top: 45rpx;
  }
  .header-cols {
    border-right:1px solid #ccc;
    padding-right:28px;
  }
  .header-banner {
    margin-bottom:10px;
  }
  .header-arrow {
    position: relative;
    height:18px;
    justify-self: right;
    align-self:center;
    transform: translateY(-50%);
    color: #B0976E;
    font-size:0.9rem;
  }
  .num {
    font-size: 1.6rem;
    margin-right: 10rpx;
    font-weight: bold;
  }
  .continue-time {
    display: flex;
    justify-content:center;
    padding-top: 10px;
    font-size: 16px;
    line-height: 1;
  }
  .ex {
    color: #B0976E;
    font-size: 0.8rem;
  }

  .ml10p {
    margin-left: 10%;
  }
  .m10 {
    margin: 10px 0;
  }
  .arrow {
    position:absolute;
    right: 8%;
    top:50%;
    transform: translateY(-50%);
    color: #B0976E;
  }
  .about-me {
    padding:5px 0;
    font-size:0.9rem;
  }
  .reset-button {
    background-color: #fff;
    font-size: 0.9rem;
    border: none;
  }
  .reset-button::after {
    border: none;
    outline: 0;
  }
  .suggest {
    line-height: 1.4;
    color:#B0976E;
  }
</style>

<template>
  <view class="container">
    <view class="login-fixed-wrap {{!userInfo.nickName ? '' : 'hide'}}">
      <view class="login-pannel">
        <view class="login-title">请先登录</view>

        <button class="login-button" open-type="getUserInfo" lang="zh_CN" bindgetuserinfo="getUserInfo">
          <image class="weixin-blue-icon" src="/images/weixin_blue.svg"></image>
          <view>微信快捷登录</view>
        </button>
      </view>
    </view>
    <!-- user -->
    <view class="header-wrap">
      <view class="pr">
        <image class="userinfo-avatar" src="{{ userInfo.avatarUrl || '/images/aboutme-logo.png'}}" background-size="contain"/>
        <view class="nickname button">
          {{userInfo.nickName || '未登录'}}
        </view>
        <view class="desc">
          {{(userInfo.province || '') + ' ' + (userInfo.city || '')}}
        </view>
      </view>
    </view>

    <!-- 数据 -->
    <view class="wrap ex" style="height: 120px">
      <view class="header-banner-wrap" @tap="toBriefing">
        <view class="header-cols">
          <view class="header-banner">总天数</view>
          <view class="inline num">{{totalTrainDay}}</view><view class="inline">天</view>
        </view>
        <view class="header-cols">
          <view class="header-banner">日均时长</view>
          <view class="inline num">{{averageDayTime}}</view><view class="inline">分钟</view>
        </view>
        <view>
          <view class="header-banner">单次最多</view>
          <view class="inline num">{{singleMostDuration}}</view><view class="inline">分钟</view>
        </view>
        <view class="header-arrow">></view>
      </view>

      <view class="continue-time {{ct === 1 ? '' : 'hide'}}">连续练习{{continuousNum}}天</view>
      <view class="continue-time {{ct === 0 ? '' : 'hide'}}">连续练习{{continuousNum}}天,今天{{todayDuration}}分钟</view>
      <view class="continue-time {{ct > 1 ? '' : 'hide'}}">已中断{{ct}}天</view>
    </view>
    <!-- 数据 end -->

    <!-- 操作 -->
    <view class="wrap" style="height: 80%;font-size: 0.8rem;margin-top: 10px;padding:0;color: #B0976E;">
      <form report-submit="true" @submit="getFormId">
        <button class="reset-button m10 pr about-me" style="position: relative;" form-type="submit" @tap="onGoAboutMe">
          <view class="ml10p suggest">关于我们</view>
          <view class="arrow">></view>
        </button>
      </form>
    </view>


    <view class="wrap" style="height: 80%;font-size: 0.8rem;margin-top: 10px;padding:0;color: #B0976E;">
      <button class="reset-button m10 pr about-me" style="position: relative;" open-type="contact">
        <view class="ml10p suggest">反馈我的建议</view>
        <view class="arrow">></view>
      </button>
    </view>
    <!-- 操作 end -->
  </view>
</template>

<script>
  import wepy from 'wepy'
  import {ajax} from '../components/ajax.js'
  import formIds from "../mixins/formIds"

  const getCt = function() {
    const d = new Date()
    const dx = new Date([d.getFullYear(), d.getMonth() + 1, d.getDate()].join('/') + ' 00:00:00').getTime()
    const dt = new Date(this.strLastTime).getTime()

    if(!dt) {
      return this.ct = 1
    } else if(dt - dx < 86400000 && dt - dx > 0){
      this.ct = 0
    } else if(dt - dx < 0 && dt - dx > -86400000) {
      this.ct = 1
    } else {
      this.ct = Math.round((dx - dt) / 86400000)
    }
  }

  const initPage = function () {
    // my info
    ajax({
      ins: this,
      url: '/me/info',
      params: {},
      success: (d) => {
        if (d && d.trainInfo) {
          Object.assign(this, d.trainInfo)
          getCt.call(this)
          this.exTime = d.trainInfo.todayDuration || 0
          this.$apply()
        }
      }
    })
  }

  export default class Tag extends wepy.page {
    config = {
      disableScroll: true,
      navigationBarTitleText: '我'
    }
    components = {}
    data = {
      ct: 1,
      userInfo: {
        nickName: ''
      },
      starList: [1,1,1],
      totalTrainDay: 0,
      averageDayTime: 0,
      singleMostDuration: 0,
      continuousNum: 0,
      todayDuration: 0,
      exTime: 0
    }
    getUserInfo(e) {
      const that = this;
      wx.setStorageSync("token", {});

      that.$parent.getUserInfo(userInfo => {
        if (userInfo) {
          that.userInfo = userInfo
          initPage.call(that)
          that.$apply()
        }
      }, e.detail)
    }
    onShow() {
      initPage.call(this)

      const userInfo = this.$parent.globalData.userInfo || {}
      this.userInfo = userInfo
    }
    mixins = [ formIds ]
    methods = {
      onGoAboutMe() {
        this.$navigate('./aboutme', {hour: this.hour, minute: this.minute});
      },
      toBriefing() {
        this.$navigate('./ex-briefing');
      }
    }
    onLoad() {
      this.$parent.getUserInfo((userInfo) => {
        if (userInfo) {
          this.userInfo = userInfo
          // my info
          ajax({
            ins: this,
            url: '/me/info',
            params: {},
            success: (d) => {
              Object.assign(this, d.trainInfo)
              this.exTime = d.trainInfo.todayDuration || 0
              this.$apply()
            }
          })
        }

        this.$apply()
      })
    }
  }
</script>
